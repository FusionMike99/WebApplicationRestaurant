@model IEnumerable<WebApplicationRestaurant.Models.OrderIngredientsItem>

@{
    ViewData["Title"] = "Кошик";
}

<h1>Кошик</h1>

<p>
    <a asp-action="GoToOrder">Оформити замовлення</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Ingredient)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Count)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Count(); i++)
        {
            var item = Model.ElementAt(i);
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Ingredient.Name)
                </td>
                <td>
                    <form id="@String.Concat("ChangeCartForm", @i)" asp-action="ChangeCart" method="post">
                        <input type="hidden" name="ingredientId" value="@item.IngredientId" />
                        <div>
                            <input type="number" name="newCount" value="@item.Count" step=".1" min="1" />
                        </div>
                    </form>
                </td>
                <td>
                    <input type="submit" value="Змінити" class="btn btn-primary" form="@String.Concat("ChangeCartForm", @i)" />
                    <a asp-action="DeleteFromCart" asp-route-id="@item.IngredientId" class="btn btn-danger">Видалити з кошику</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<p>
    <a asp-action="ClearCart">Очистити кошик</a> |
    <a asp-action="Index">Повернутися до списку</a>
</p>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}